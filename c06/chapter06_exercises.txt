6.16 Multiples
    Write a method isMultiple that determines, for a pair of integer, whether the second integer is a multiple
    of the first. The method should take 2 integer argument and return true if the second is a multiple of the
    first and false otherwise. [Hint: Use the remainder operator] Incorporate this method into an application
    that inputs a series of pairs of integers (one pair at a time) and determines whether the second value in
    each pair is a multiple of the first.

6.20 Circle Area
    Write an application that prompts the user for the radius of a circle and uses a method called circleArea
    to calculate the area of the circle.

6.22 Temperature Conversion
    Implement the following integer methods:
    a) Method celsius return the Celsius equivalent of a Fahrenheit temperature, using the calculation:
        celsius = 5.0 / 9.0 * (fahrenheit - 32)
    b) Method Fahrenheit return the Fahrenheit equivalent of a celsius temperature, using the calculation:
        fahrenheit = 9.0 / 5.0 * celsius + 32
    c) Use the methods from part (a) and (b) to write an application that enables the user either to enter a
        Fahrenheit temperature and display the Celsius equivlent or to enter Celsius temperature and display
        the Fahrenheit equivalent.

6.25ab Prime Numbers
    A positive integer is prime  if it's divisible by only 1 and itself. For example 2, 3, 5, 7 are prime
    but 4, 6, 8, 9 are not. The number 1, by definition is not prime.
    a) Write a method that determines whether a number is prime.
    b) Use this method in an application that determines and display all the prime numbers less than 10,000.
        How many numbers up to 10,000 do you have to test to ensure that you found all the prime?
    c) (optional) Initially, you may think that n/2 is the upper limit for which you must test to see whether the
        number n is prime, but you need only go as high as the square root of n. Rewrite the program and run it
        both ways.

6.30 Guess the number
    Write an application that plays "guess the number" as follows: Your program choose a number to be guessed by
    selecting a random integer in the range of 1 to 1000. The application display the prompt "Guess a number
    between 1 and 1000". The player input the first guess. If the player's guess is incorrect, your program should
    display "Too high, try again." or "Too low, try again." to help the player "zero" in on the correct answer. The
    program should prompt the user for the next guess. When the user enters the correct answer, display
    "Congratulations. You guessed the number!", and allow the user to choose whether to play again